---
# bootstrap root tasks for users

- name: Configure the root user in the chroot
  ansible.builtin.shell: # noqa no-changed-when
    cmd: |-
      /usr/bin/arch-chroot {{ bootstrap_mount_base | default('') }} \
        /usr/bin/fish -c 'usermod -s {{ users_root.shell | default(users_default_shell) }} root'
  when: not ansible_check_mode
  tags:
    - users
    - configuation

- name: Set the password for root in the chroot
  # Use command rather than shell here as the hashing controls in an encrypted
  # password string use dollar symbols to control algorithms and salts, which,
  # under shell attempt to be interpreted in the string, whereas command does
  # not, so is safer for managing this task
  ansible.builtin.command: # noqa no-changed-when
    cmd: |-
      /usr/bin/arch-chroot {{ bootstrap_mount_base | default('') }} /usr/bin/fish -c "usermod -p '{{ users_root.password }}' root"
  when: |-
    not ansible_check_mode and
    users_root.password is defined and
    users_root.password.startswith('$')
  tags:
    - root
    - password

# The root user is always configured on bootstrapping, so just ensure the
# credentials (i.e. password and SSH public keys) are up-to-date

- name: Clear authorized_keys for root in the chroot
  # The root user is disabled in SSH, so it cannot be accessed remotely and as
  # such all SSH keys should be deleted to act as a further backup
  ansible.posix.authorized_key:
    path: "{{ bootstrap_mount_base | default('') }}/root/.ssh/authorized_keys"
    user: root
    key: ""
    state: absent
  tags:
    - root
    - authorized_keys
