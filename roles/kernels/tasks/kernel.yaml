---
# kernel tasks for kernels

# Install the preset first to ensure that the mkinitcpio hook run by pacman
# creates the correct files on install
- name: Configure presets for {{ kernel }}
  ansible.builtin.template:
    src: linux.preset.jinja
    dest: "{{ bootstrap_mount_base | default('') }}/etc/mkinitcpio.d/{{ kernel }}.preset"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  # Only run this outside of a chroot configuration as inside of chroot we need
  # to handle it differently, as per the task below
  notify:
    - Run mkinitcpio locally
    - Run sbctl sign-all locally
  tags:
    - kernel
    - configuration

- name: Install locally the kernel {{ kernel }}
  community.general.pacman:
    name: "{{ kernel }}"
    state: latest
  # Work on the assumption that the kernel will have been pre-installed as part
  # of the bootstrap role when initialising the initial system, so only attempt
  # installation or update when bootstrap_mount_base is not set.
  when: not bootstrap_mount_base | default('') | length
  tags:
    - kernel
    - packages
    - configuration

- name: Force running mkinitcpio in the chroot for {{ kernel }}
  # This handler is building boot files specifically inside chroot'd environments
  ansible.builtin.command: # noqa no-changed-when
    cmd: |-
      /usr/bin/arch-chroot {{ bootstrap_mount_base | default('') }} /usr/bin/fish -c 'mkinitcpio -p {{ kernel }}'
  # If the kernel has been installed via pacstrap, rather than pacman above,
  # then the installation of the presets will be after installation, so force
  # the run when bootstrap_mount_base is configured to handle this
  when: bootstrap_mount_base | default('') | length
  tags:
    - kernel
    - mkinitcpio
    - configuration

- name: Install and configure the kernel for physical machines
  ansible.builtin.include_tasks: kernel-physical.yaml
  when: device_type | default("virtual") == "physical"

- name: Install and configure the kernel for virtual machines
  ansible.builtin.include_tasks: kernel-virtual.yaml
  when: device_type | default("virtual") == "virtual"
